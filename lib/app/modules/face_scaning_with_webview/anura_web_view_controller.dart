import 'package:webview_flutter/webview_flutter.dart';

import '../../../../import.dart';

class AnuraWebViewController extends GetxController {

  var controller = WebViewController().obs;
  var isLoading = false.obs;

  var url = "https://awe.na-east.nuralogix.ai/c/xsdR1RulaEb/gqw2YdH1dveVGaUq26bfv2yuGdAbPcuMlvpQCvhJkUl%2Ft4C6bcXIVqXGaBk01Lx7UjZ%2Bths4UsZYs%2FekC8ZiJ87yz90aDyEA4pKbzBGR8y4KhfJ04tyqMWKSXPtlNwvzmjlm8Ilgfjytgsk8coUSjTgTFa7N6I3tZGWKH2xG0%2FHI3eNPzcpcTxCSIwajs9WHli4R3IdmdNjjJz%2FkU5wZl748pjQLFpxav2R3Ih7tYjA970YE3kKaNA0tyXb%2BarTMU03B7bH8Q%2B0s55r8PuhZTkkm8eYpjNEGSy6%2F2s2XEtqrr3addq%2BsvHrTXgH%2FD3qgPCG7HwtAt%2FrLon4EQvdvCw%3D%3D/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJPcmdhbml6YXRpb25JRCI6ImRhOTA5MzEwLWRlZjktNGI2MS04NzA0LTczMzZhMjJkZTM4YyIsIklEIjoiNWNhNTdhYmYtMGRmMy00MjAzLWI1ZTgtZTczZDI2Yjc2MzRjIiwiVHlwZSI6IkRldmljZSIsIkRldmljZUlEIjoiNWNhNTdhYmYtMGRmMy00MjAzLWI1ZTgtZTczZDI2Yjc2MzRjIiwiU2Vzc2lvbkdlbiI6MCwiUmVnaW9uIjoibmEtZWFzdCIsImV4cCI6MTcwMzcwMTY0OSwiaWF0IjoxNzAzNzAxMDQ5LCJpc3MiOiJ1cm46ZGVlcGFmZmV4In0.SrH7JvXI5tHlEGmQS2As4A80LqGznzB4qvJ8sKuAcAY/U2FsdGVkX18a0OEnVBIZCw2ApJ4OkPDRqAQaxqB6kSKHNorT27pE%2B8qCN9gCBQLwGhbY%2F3%2F6XRiGBFzUMXye7Ew62t1nnV4OaQy%2BJTKSpZTYpGQOG8iORKPEmPcE3eCQDY%2BRbQf3t3Qxll4hsco3awsZQEC6CYu5uYVTT6fNyQ1Xv9Upq6X4%2FDuHjYlebcrANVRsxM4F6%2BA0euW1xY%2BghfsOOyMvQiCT7U60N5XqtNgtfO0aqALSmd5BBhepxF53L0%2BPwRcbO3doDDWmjKLkmyAH1xlKVfOoPka%2F2stmUCzwKVIJ4ExWI3KH2szK9qgLtKh7vDtoCWkWO1aLyYsgudXWeMbqv3cSpkOoeDsI4pqRlsdPd5rxtDNwhfFvrmcnmlE1gh5Pqo42xz9x4Id4WIsTuGb4dD%2B3zhKd4zmqvBpi6acupMe%2BVxzS70qUsf7POTMfmMpM01TnpSGSsjDQm6tdBUEXtO2UQE%2BQno3mUF7W1sf9%2FBqp4olWIq5tAVXkfFHOtTmSomBbZTUxYi26dO7yC2bDPnYKYb4zzfriogtw6aIT%2Fld0gMvKy3Xg5fPLdN7MuI%2BU4TlfYIJga0J66w9Q5h%2B0ViEZo7UDuF%2BaY6VHmY9cEBxX9eGPLumpPROa%2Bt2RLeKaGibhNCneaWCKXKT1Qh0q88YctrtA8b2D2m1sJcfeI8W3FkHt0n%2B%2Bl2ZizfRgWDDnfkWhQfOAWMKmFmv%2B6n9LRzn1td0TzfhKO%2BIysveYgAZRFI4PwtWOkTCI%2FPQyFD8Vw6ii9DsZ3yZeIheDlZkRTfoR7aXUD9dnaRWmdYB8vXLM6%2FzFbHSkb3ip%2BQljtwqK7%2FFK6HEohJw%2F19BNXPeR5cRntm92Ia8073mUvDszjTxHTHC7mr7F0i40d2ftk80ZKW7CMah6nIBxZSEd2gLUiHSlwO85IB%2BRX4Y4WwSF33iZmQT1xZz3Xifamp0zKWQ%2FvP3l9DkQKLdzHRnZV3rJGEhmLfZKq4fFE6Zo00pmCzrW7jMeHCqLkzE0JRpWUL77lRApCUfLJi8oRsQ8acoGCdNsgQJ2h6ZmmEwra5ZKj1Y6mjdG%2BURhtlFC01TLj7cPowKykGh5AB9v3yv53bl%2FY%2FvzeRaKYA86zhuFCv41XMYSjGhwa8zYzEfE".obs;
  var url2 = "https://assessment.hibiscushealth.com/dashboard?results=eyJwcG0iOjEwMC41NjM4LCJibWkiOjMzLjU3NjUsInNuciI6MS4zNTYsIm1zaSI6Mi4xOTg0LCJzeXN0b2xpYyI6MTMwLjIwMzksImRpYXN0b2xpYyI6OTEuMTY5OSwiYWdlIjoyNCwiYnJlYXRoaW5nIjoxOCwiaGVhbHRoU2NvcmUiOjY1LjA0NzYsIndhaXN0VG9IZWlnaHQiOjYxLjI5MDMsImhlYXJ0UmF0ZVZhcmlhYmlsaXR5Ijo2MC44MTE2LCJjYXJkaWFjV29ya2xvYWQiOjQuMTE3LCJhYnNpIjo3LjkyMjcsImN2ZFJpc2siOjAuNzY3Nywic3Ryb2tlUmlzayI6MC43ODM4LCJoZWFydEF0dGFja1Jpc2siOjAuMDk0MywiSHlwZXJ0ZW5zaW9uUmlzayI6MjUuNjU1OCwiSHlwZXJ0cmlnbHljZXJpZGVtaWFSaXNrIjoxNi4yNDg5LCJIeXBlcmNob2xlc3Rlcm9sZW1pYVJpc2siOjY2LjMzMTMsIkRpYWJldGVzUmlzayI6ODcuNjY0LCJpcnJlZ3VsYXJIZWFydEJlYXRzIjowLCJtZWFzdXJlbWVudElkIjoiNjgyYmUzZTctNGIyZS00MDVhLTlmYzktZmU5ZDg0NjY0ZTFjIiwiYXZnU3RhclJhdGluZyI6My40Mzk4NDk2MjQwNjAxNTA0LCJQSFlTSUNBTF9TQ09SRSI6Mi4zMzMzLCJCUF9TWVNUT0xJQyI6MTMwLjIwMzksIk1FTlRBTF9TQ09SRSI6NCwiT1ZFUkFMTF9NRVRBQk9MSUNfUklTS19QUk9CIjo1MC45MTQ3LCJXQUlTVF9DSVJDVU0iOjExMC45MzU1LCJJSEJfQ09VTlQiOjAsIkZMRF9SSVNLX1BST0IiOjU4LjY3MzEsIkhQVF9SSVNLX1BST0IiOjI1LjY1NTgsIkhETFRDX1JJU0tfUFJPQiI6ODcuNjY0LCJCUF9DVkQiOjAuNzY3NywiQUdFIjoyNCwiVEdfUklTS19QUk9CIjo2Ni4zMzEzLCJXQUlTVF9UT19IRUlHSFQiOjYxLjI5MDMsIk1GQkdfUklTS19QUk9CIjo1MS43MzEyLCJQSFlTSU9fU0NPUkUiOjMuNSwiQlBfRElBU1RPTElDIjo5MS4xNjk5LCJNU0kiOjIuMTk4NCwiSEVJR0hUIjoxNzguMzU4OCwiSEJBMUNfUklTS19QUk9CIjo0NC40ODMsIkJQX1RBVSI6MS41OTE5LCJCTUlfQ0FMQyI6MzMuNTc2NSwiSEVBTFRIX1NDT1JFIjo2NS4wNDc2LCJCUF9TVFJPS0UiOjAuNzgzOCwiVklUQUxfU0NPUkUiOjMsIkJQX0hFQVJUX0FUVEFDSyI6MC4wOTQzLCJCUF9SUFAiOjQuMTE3LCJIUl9CUE0iOjEwMC41NjM4LCJTTlIiOjEuMzU2LCJSSVNLU19TQ09SRSI6My40Mjg1LCJBQlNJIjo3LjkyMjcsIldFSUdIVCI6ODkuMTc4MywiQlJfQlBNIjoxOCwiREJUX1JJU0tfUFJPQiI6MTYuMjQ4OSwiR0VOREVSIjoxLCJIUlZfU0ROTiI6NjAuODExNiwiTm90ZXMiOnsiQlBfU1lTVE9MSUMiOlsiTk9URV9ERUdSQURFRF9BQ0NVUkFDWSIsIk5PVEVfTUlTU0lOR19NRURJQ0FMX0lORk8iXSwiQlBfQ1ZEIjpbIk5PVEVfREVHUkFERURfQUNDVVJBQ1kiLCJOT1RFX01JU1NJTkdfTUVESUNBTF9JTkZPIl0sIlBIWVNJT19TQ09SRSI6WyJOT1RFX0RFR1JBREVEX0FDQ1VSQUNZIiwiTk9URV9NSVNTSU5HX01FRElDQUxfSU5GTyJdLCJCUF9ESUFTVE9MSUMiOlsiTk9URV9ERUdSQURFRF9BQ0NVUkFDWSIsIk5PVEVfTUlTU0lOR19NRURJQ0FMX0lORk8iXSwiQlBfVEFVIjpbIk5PVEVfREVHUkFERURfQUNDVVJBQ1kiLCJOT1RFX01JU1NJTkdfTUVESUNBTF9JTkZPIl0sIkhFQUxUSF9TQ09SRSI6WyJOT1RFX0RFR1JBREVEX0FDQ1VSQUNZIiwiTk9URV9NSVNTSU5HX01FRElDQUxfSU5GTyJdLCJCUF9TVFJPS0UiOlsiTk9URV9ERUdSQURFRF9BQ0NVUkFDWSIsIk5PVEVfTUlTU0lOR19NRURJQ0FMX0lORk8iXSwiVklUQUxfU0NPUkUiOlsiTk9URV9ERUdSQURFRF9BQ0NVUkFDWSIsIk5PVEVfTUlTU0lOR19NRURJQ0FMX0lORk8iXSwiQlBfSEVBUlRfQVRUQUNLIjpbIk5PVEVfREVHUkFERURfQUNDVVJBQ1kiLCJOT1RFX01JU1NJTkdfTUVESUNBTF9JTkZPIl0sIkJQX1JQUCI6WyJOT1RFX0RFR1JBREVEX0FDQ1VSQUNZIiwiTk9URV9NSVNTSU5HX01FRElDQUxfSU5GTyJdLCJSSVNLU19TQ09SRSI6WyJOT1RFX0RFR1JBREVEX0FDQ1VSQUNZIiwiTk9URV9NSVNTSU5HX01FRElDQUxfSU5GTyJdfSwic2Vzc2lvbklkIjoiVTJGc2RHVmtYMSUyQmYwRiUyRndlS0pRMGhPVlJHRUVLbkFPajRVR083MkhsWU5Nbmxja3dMSkg2YVl4UFV5RlJ4TDZZVmw1YXA1VEc3UmU4ZUJ6WVNoJTJCalY0WTc4OXBvVEo3dWh5NUdYUXRQbEJoQTk4cWRCMXZ2OWhmS2lrWFdJYW02RHRMZEwlMkZJZ0laWHZhampKM2Vaa01hTEtYaFZvandCMlpjU3BJQUZubUs4UDFrSndGUE9lOXh4SFM3cXF2RU45MnNwRkFJQzdyTUNiZkM0M2JqUDV0cThYVG53VWVoM0VXbmplSDAlMkJ2ejdRbGlRR2lwRU1ZZWl2JTJCWXVGM0I5OVhVbEZyR1A1b0ltMmV3Q3dCcGoyblZPT0VZZXRnRkF6clNCczJwWTBsanFDenRIYyUyRjNyc2xJcXV5STlVdW9nb2tqdWt5cWNjU0EyODVpJTJCaFJnandUVlVjdm44MFhBWE9XakJ4ZkZUbkhjWUY1RlclMkJCMGRFYmlWQmpUV1E5TEZveEtSejNJZEFNZkV2dSUyQmlQYWJzeGM0MTZhJTJCUU1uUXJVNUhna1VBdll5MEc4cFpxRm1SMm1TdXhKcDlGYjRLZUF6Nll0bjFxV2g0SVZHYSUyRmM3SlJwTWZ6QjR0ZVY0JTJGVkwzcnBqMk5RcWJxN3hHenBhVXB5UFhCVkVHZiUyQndZUlFCRWlISWtQYXQ4TzFnVyUyQjZ6ODRuQjNGenRBNyUyRnFlY1I1UWlVWnAyY1lEUUJsbGdtN3g0ZVp3UThkcEUlMkY5RDkxenRuJTJGV3pJYVBPJTJGQ3IyY3dVbnVyblh4T3JLejhWMXhEQkRJeGJFYnFZRkdCN2k4cUMlMkZqemhqQ1BFYkRmeGNtMWtMblg2Um94YWhOVU42UWw5WmFDNDhwRHB5dVB5cW9BMUlqa0dRdzNXUkJhQWM0bWRSSkJGaU5hTGNhdkVOTiUyQlJlMFMwTElvNmNBJTJGdkpMR1VKQ1JpNVVVT1cwM2wycDM3d0pDWGdjUmFnMXRJUTVKUUo4Vm05OUVET2Q5OTFoWHIyOTVQdHZhM3Y2cWlvZVlsdyUyQnBkJTJCTE1TbUhCaW9hRlBuUkNJWERIUGlCR29FdUN6M1JGMjUzRHFaYkUzMGZUcEpDbXYlMkY2Tm5GdHpid1hHbHppUW1kejFDeXNlWG1nUXFvVFo0Q2JhbWljTVdOczRpUHBYRXg4UWhBclE4QjJVREZyTHlyUFJ4NDFMWEZuQU5nNlkwZSUyQlNubE9MTmlEYlZFenZOQW1XMXdNV1lwaTlxc0RTajdzJTJGT2k1elI2UWhaa1FhbXNkdTNkcVlOa1RHd1FhblZ2bEtITDlnUDJscFVTQ3EzZk5NQ2Qwc29qTWhrTWxpVnhvcFBtck0xb0dKbSUyQjhaNml5MWJSNHVOMWowNk05VXZjOXhqc3BOWU5HVm9yMDg5ZVU2dnhXMDE4QmV5b20lMkZDS0tDWlo5UFJwMTFWNFJmTm9VMkxjcFBwWGFaRmg5YkkxZFdRZXpmRHVJQWY4ejE3Q0xXQ2wxWGppUWFsRzE2TkR2JTJGNDNEJTJGT0YlMkZHViIsImlkZW50aWZpZXIiOiJLdW5hbC5oaEBnbWFpbC5jb20iLCJTRVNTSU9OX0lEIjoiVTJGc2RHVmtYMSUyQmYwRiUyRndlS0pRMGhPVlJHRUVLbkFPajRVR083MkhsWU5Nbmxja3dMSkg2YVl4UFV5RlJ4TDZZVmw1YXA1VEc3UmU4ZUJ6WVNoJTJCalY0WTc4OXBvVEo3dWh5NUdYUXRQbEJoQTk4cWRCMXZ2OWhmS2lrWFdJYW02RHRMZEwlMkZJZ0laWHZhampKM2Vaa01hTEtYaFZvandCMlpjU3BJQUZubUs4UDFrSndGUE9lOXh4SFM3cXF2RU45MnNwRkFJQzdyTUNiZkM0M2JqUDV0cThYVG53VWVoM0VXbmplSDAlMkJ2ejdRbGlRR2lwRU1ZZWl2JTJCWXVGM0I5OVhVbEZyR1A1b0ltMmV3Q3dCcGoyblZPT0VZZXRnRkF6clNCczJwWTBsanFDenRIYyUyRjNyc2xJcXV5STlVdW9nb2tqdWt5cWNjU0EyODVpJTJCaFJnandUVlVjdm44MFhBWE9XakJ4ZkZUbkhjWUY1RlclMkJCMGRFYmlWQmpUV1E5TEZveEtSejNJZEFNZkV2dSUyQmlQYWJzeGM0MTZhJTJCUU1uUXJVNUhna1VBdll5MEc4cFpxRm1SMm1TdXhKcDlGYjRLZUF6Nll0bjFxV2g0SVZHYSUyRmM3SlJwTWZ6QjR0ZVY0JTJGVkwzcnBqMk5RcWJxN3hHenBhVXB5UFhCVkVHZiUyQndZUlFCRWlISWtQYXQ4TzFnVyUyQjZ6ODRuQjNGenRBNyUyRnFlY1I1UWlVWnAyY1lEUUJsbGdtN3g0ZVp3UThkcEUlMkY5RDkxenRuJTJGV3pJYVBPJTJGQ3IyY3dVbnVyblh4T3JLejhWMXhEQkRJeGJFYnFZRkdCN2k4cUMlMkZqemhqQ1BFYkRmeGNtMWtMblg2Um94YWhOVU42UWw5WmFDNDhwRHB5dVB5cW9BMUlqa0dRdzNXUkJhQWM0bWRSSkJGaU5hTGNhdkVOTiUyQlJlMFMwTElvNmNBJTJGdkpMR1VKQ1JpNVVVT1cwM2wycDM3d0pDWGdjUmFnMXRJUTVKUUo4Vm05OUVET2Q5OTFoWHIyOTVQdHZhM3Y2cWlvZVlsdyUyQnBkJTJCTE1TbUhCaW9hRlBuUkNJWERIUGlCR29FdUN6M1JGMjUzRHFaYkUzMGZUcEpDbXYlMkY2Tm5GdHpid1hHbHppUW1kejFDeXNlWG1nUXFvVFo0Q2JhbWljTVdOczRpUHBYRXg4UWhBclE4QjJVREZyTHlyUFJ4NDFMWEZuQU5nNlkwZSUyQlNubE9MTmlEYlZFenZOQW1XMXdNV1lwaTlxc0RTajdzJTJGT2k1elI2UWhaa1FhbXNkdTNkcVlOa1RHd1FhblZ2bEtITDlnUDJscFVTQ3EzZk5NQ2Qwc29qTWhrTWxpVnhvcFBtck0xb0dKbSUyQjhaNml5MWJSNHVOMWowNk05VXZjOXhqc3BOWU5HVm9yMDg5ZVU2dnhXMDE4QmV5b20lMkZDS0tDWlo5UFJwMTFWNFJmTm9VMkxjcFBwWGFaRmg5YkkxZFdRZXpmRHVJQWY4ejE3Q0xXQ2wxWGppUWFsRzE2TkR2JTJGNDNEJTJGT0YlMkZHViIsIk1FQVNVUkVNRU5UX0lEIjoiNjgyYmUzZTctNGIyZS00MDVhLTlmYzktZmU5ZDg0NjY0ZTFjIn0=".obs;

  @override
  void onInit() {
    // TODO: implement onInit
    isLoading.value = true;
    controller.value = WebViewController()
      ..setJavaScriptMode(JavaScriptMode.unrestricted)
      ..setBackgroundColor(const Color(0x00000000))
      ..setNavigationDelegate(
        NavigationDelegate(
          onPageFinished: (String url) {
            isLoading.value = false;
            if (url.toLowerCase().contains("https://assessment.hibiscushealth.com/dashboard?results=")) {
                Utils.showSnackBarFun(Get.context, "!!!!!!!!!!!!!! results !!!!!!!!!!!!!!!!!!!!!!");
                var results = url;
                var baseUrlResult = "https://assessment.hibiscushealth.com/dashboard?results=";
                final String result = results.replaceFirst(baseUrlResult, '');
                print("url2 ====================>>>>>>>>>>>>>>>\n");
                print("${Uri.parse(url2.value)}");
                print("debugPrint url2 ====================>>>>>>>>>>>>>>>\n");
                debugPrint("${Uri.parse(url2.value)}");
                print("printWrapped url2 ====================>>>>>>>>>>>>>>>\n");
                printWrapped("${Uri.parse(url2.value)}");
                // print("results ====================>>>>>>>>>>>>>>>\n");
                // print(results);
                // print("results hash ====================>>>>>>>>>>>>>>>\n");
                // print(result);
            }
          },
          onWebResourceError: (WebResourceError error) {},
          onNavigationRequest: (NavigationRequest request) {
            if (request.url.startsWith('https://www.youtube.com/')) {
              return NavigationDecision.prevent;
            }
            return NavigationDecision.navigate;
          },
        ),
      )
      ..loadRequest(Uri.parse(url2.value));
    super.onInit();
  }

  void printWrapped(String text) {
    final pattern = RegExp('.{1,800}'); // 800 is the size of each chunk
    pattern.allMatches(text).forEach((match) => print(match.group(0)));
  }

}
